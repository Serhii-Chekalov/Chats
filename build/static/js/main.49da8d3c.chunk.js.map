{"version":3,"sources":["components/SidebarView/SidebarView.styled.js","components/SidebarView/SidebarView.js","components/ChatView/ChatView.styled.js","components/ChatView/ChatView.js","components/RootView/RootView.styled.js","components/RootView/RootView.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["HeaderWrap","styled","div","Head","h3","Name","h2","Message","Header","Input","input","List","ul","ListItem","li","Button","button","SidebarView","chats","onChatChange","onSearch","onChange","e","target","value","placeholder","type","map","id","user","message","onClick","NameWrap","ChatWrap","InputWrap","MessageItem","span","MessageWrap","props","right","ChatView","activeChat","messages","onMessageCreate","useState","setMessage","handleKeyDown","event","key","index","creator","Boolean","onKeyDown","RootWrap","SidebarWrap","main","RootView","searchPhrase","setSearchPhrase","setActiveChat","localStorage","JSON","parse","messagesData","setMessages","useMemo","chatsData","i","messagesById","lastMessage","length","renderChats","filter","toLowerCase","includes","activeChatData","find","useEffect","setItem","stringify","setFakeData","fetch","then","res","json","result","lastUpdate","Date","now","error","alert","setTimeout","Math","floor","random","modifyMessages","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49da8d3c.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const HeaderWrap = styled.div`\r\n  background-color: #f6f6f4;\r\n  border: 1px solid #c0c0c0;\r\n  height: calc(100vh - 600px);\r\n`;\r\n\r\nexport const Head = styled.h3`\r\n  display: block;\r\n  color: #4682b4;\r\n  margin: 30px 0px 0px 25px;\r\n`;\r\n\r\nexport const Name = styled.h2`\r\n  margin: 0;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n`;\r\n\r\nexport const Message = styled.h3`\r\n  margin: 0;\r\n  font-size: 12px;\r\n  color: #7e818a;\r\n  margin-top: 12px;\r\n  font-weight: normal;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  margin-top: 20px;\r\n  display: block;\r\n  margin-left: 25px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  margin-top: 20px;\r\n  margin-left: 25px;\r\n  width: 70%;\r\n  height: 35px;\r\n  line-height: 30px;\r\n  padding: 0 50px 0 20px;\r\n  background-color: #ffff;\r\n  border: 1px solid black;\r\n  border-radius: 30px;\r\n  color: black;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  overflow-y: scroll;\r\n  height: calc(100vh - 220px);\r\n  margin-top: 30px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  cursor: pointer;\r\n  width: 100%;\r\n  display: block;\r\n  padding: 10px;\r\n  font-size: 12px;\r\n  background-color: #fff;\r\n  border: 0;\r\n  border-bottom: 1px solid #c0c0c0;\r\n\r\n  &:hover {\r\n    background-color: #eee;\r\n  }\r\n`;\r\n","import { useState, useEffect } from \"react\";\nimport {\n  Header,\n  Input,\n  Head,\n  Button,\n  List,\n  ListItem,\n  HeaderWrap,\n  Name,\n  Message,\n} from \"./SidebarView.styled\";\n\nexport const SidebarView = ({ chats = [], onChatChange, onSearch } = {}) => {\n  return (\n    <div>\n      <HeaderWrap>\n        <Header>Sergii</Header>;\n        <Input\n          onChange={(e) => onSearch(e.target.value)}\n          placeholder=\"Serch or start new chat\"\n          type=\"text\"\n        />\n      </HeaderWrap>\n      <Head>Chats</Head>\n      <List>\n        {chats.map(({ id, user, message }) => {\n          return (\n            <ListItem key={id}>\n              <Button onClick={() => onChatChange(id)}>\n                <Name>{user}</Name>\n                <Message>{message}</Message>\n              </Button>\n            </ListItem>\n          );\n        })}\n      </List>\n    </div>\n  );\n};\n","import styled from \"@emotion/styled\";\r\n\r\nexport const NameWrap = styled.div`\r\n  background-color: #f6f6f4;\r\n  border: 1px solid #c0c0c0;\r\n  height: 60px;\r\n`;\r\n\r\nexport const Name = styled.div`\r\n  padding: 10px;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  color: #4682b4;\r\n`;\r\n\r\nexport const ChatWrap = styled.div`\r\n  background-color: #fcfbfa;\r\n  border: 1px solid #c0c0c0;\r\n  padding: 10px;\r\n  overflow-y: scroll;\r\n  height: calc(100vh - 220px);\r\n`;\r\n\r\nexport const InputWrap = styled.div`\r\n  background-color: #f6f6f4;\r\n  border: 1px solid #c0c0c0;\r\n  width: 100%;\r\n  padding: 40px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 20px;\r\n  border-radius: 30px;\r\n  width: 100vh;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  padding: 0 40px 0 0;\r\n`;\r\n\r\nexport const MessageItem = styled.span`\r\n  line-height: 1.2;\r\n  display: inline-block;\r\n  padding: 10px 20px;\r\n  border-radius: 20px;\r\n  background-color: #2f4f4f;\r\n  color: #ffffff;\r\n  max-width: 80%;\r\n`;\r\n\r\nexport const MessageWrap = styled.li`\r\n  display: block;\r\n  margin-bottom: 5px;\r\n\r\n  ${(props) =>\r\n    props.right &&\r\n    `\r\n    text-align: right;\r\n\r\n    span {\r\n      background-color:  #eee;\r\n      color: #000000;\r\n    }\r\n  `}\r\n`;\r\n","import { useState, useEffect, useMemo } from \"react\";\nimport {\n  Name,\n  List,\n  Input,\n  MessageItem,\n  MessageWrap,\n  ChatWrap,\n  NameWrap,\n  InputWrap,\n} from \"./ChatView.styled\";\n\nexport const ChatView = ({\n  activeChat,\n  messages = [],\n  onMessageCreate,\n} = {}) => {\n  const [message, setMessage] = useState(\"\");\n\n  const handleKeyDown = (event) => {\n    if (!message) return;\n\n    if (event.key === \"Enter\") {\n      onMessageCreate(message);\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <>\n      <NameWrap>\n        <Name>{activeChat.user}</Name>\n      </NameWrap>\n      <ChatWrap>\n        <List>\n          {messages.map(({ creator, user }, index) => {\n            return (\n              <MessageWrap key={index} right={Boolean(user)}>\n                <MessageItem>{creator || user}</MessageItem>\n              </MessageWrap>\n            );\n          })}\n        </List>\n      </ChatWrap>\n      <InputWrap>\n        <Input\n          placeholder=\"Type your message\"\n          type=\"text\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          onKeyDown={handleKeyDown}\n        />\n      </InputWrap>\n    </>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const RootWrap = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n`;\n\nexport const SidebarWrap = styled.div`\n  height: inherit;\n  width: 30%;\n`;\n\nexport const ChatWrap = styled.main`\n  height: inherit;\n  width: 70%;\n`;\n","import { useState, useEffect, useMemo } from \"react\";\nimport { SidebarView } from \"../SidebarView/SidebarView\";\nimport { ChatView } from \"../ChatView/ChatView\";\n\n// default data\nimport chatsData from \"./default-chats.json\";\nimport messagesData from \"./default-messages.json\";\n\n// styles\nimport { ChatWrap, RootWrap, SidebarWrap } from \"./RootView.styled\";\n\nexport const RootView = () => {\n  const [searchPhrase, setSearchPhrase] = useState(\"\");\n  const [activeChat, setActiveChat] = useState(1);\n  const [messages, setMessages] = useState(\n    localStorage.messages ? JSON.parse(localStorage.messages) : messagesData\n  );\n  const chats = useMemo(() => {\n    return chatsData.map((i) => {\n      const messagesById = messages[i.id];\n      const lastMessage = messagesById[messagesById.length - 1];\n\n      return {\n        ...i,\n        /** getting the last message */\n        message: lastMessage?.creator || lastMessage?.user,\n      };\n    });\n  }, [messages, searchPhrase]);\n\n  const renderChats = useMemo(() => {\n    return chats.filter((i) => {\n      return i.user.toLowerCase().includes(searchPhrase.toLowerCase());\n    });\n  }, [chats]);\n\n  const activeChatData = chats.find(({ id }) => id === activeChat);\n\n  useEffect(() => {\n    localStorage.setItem(\"messages\", JSON.stringify(messages));\n  }, [messages]);\n\n  const setFakeData = () => {\n    fetch(\"https://api.chucknorris.io/jokes/random\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setMessages((messages) => ({\n            ...messages,\n            [activeChat]: [\n              ...messages[activeChat],\n              {\n                user: result.value,\n                lastUpdate: Date.now(),\n              },\n            ],\n          }));\n        },\n        (error) => {\n          alert(error.message);\n        }\n      );\n  };\n\n  const modifyMessages = (message) => {\n    setMessages((messages) => ({\n      ...messages,\n      [activeChat]: [\n        ...messages[activeChat],\n        {\n          creator: message,\n          lastUpdate: Date.now(),\n        },\n      ],\n    }));\n    setTimeout(\n      setFakeData,\n      // set any renage, that u want 10 -> 15\n      (Math.floor(Math.random() * 5) + 3) * 1000\n    );\n  };\n\n  return (\n    <RootWrap>\n      <SidebarWrap>\n        <SidebarView\n          chats={renderChats}\n          onChatChange={(id) => setActiveChat(id)}\n          onSearch={setSearchPhrase}\n        />\n      </SidebarWrap>\n      <ChatWrap>\n        <ChatView\n          activeChat={activeChatData}\n          messages={messages[activeChat]}\n          onMessageCreate={(message) => modifyMessages(message)}\n        />\n      </ChatWrap>\n    </RootWrap>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { RootView } from \"../RootView/RootView\";\n\nfunction App() {\n  return <RootView />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}